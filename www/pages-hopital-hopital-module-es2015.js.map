{"version":3,"sources":["./src/app/pages/hopital/hopital.page.html","./src/app/pages/hopital/hopital.module.ts","./src/app/pages/hopital/hopital.page.scss","./src/app/pages/hopital/hopital.page.ts","./src/app/services/hopital.service.ts"],"names":[],"mappings":"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","file":"pages-hopital-hopital-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n    <ion-toolbar [color]=\\\"networkStatus && networkStatus.connected ?'primary':'danger'\\\">\\r\\n        <ion-back-button slot=\\\"start\\\"></ion-back-button>\\r\\n        <ion-buttons slot=\\\"end\\\" >\\r\\n          <ion-menu-button ><ion-icon name=\\\"more\\\"></ion-icon></ion-menu-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title > {{title}} </ion-title>\\r\\n      </ion-toolbar>\\r\\n      <ion-toolbar color=\\\"primary\\\" *ngIf=\\\"networkStatus && networkStatus.connected == true\\\">\\r\\n            <ion-button color=\\\"danger\\\" shape=\\\"round\\\" slot=\\\"start\\\" (click)=\\\"creerHopital()\\\" *ngIf=\\\"buttonPlus==0\\\">\\r\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button color=\\\"danger\\\" shape=\\\"round\\\" slot=\\\"start\\\" (click)=\\\"retour()\\\" *ngIf=\\\"buttonPlus==1\\\">\\r\\n                 <ion-icon name=\\\"arrow-round-back\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <div  *ngIf=\\\"networkStatus && networkStatus.connected == true\\\">\\r\\n    <div *ngIf=\\\"listHopitaux==0\\\">\\r\\n      <ion-segment [(ngModel)]='selectedView'>\\r\\n        <ion-segment-button value='proche' (click)=\\\" afficherHopP()\\\">\\r\\n          <ion-label>Proche de moi</ion-label>\\r\\n        </ion-segment-button>\\r\\n        <ion-segment-button value='Autres'>\\r\\n            <ion-label>Autres</ion-label>\\r\\n        </ion-segment-button>\\r\\n      </ion-segment>\\r\\n      <div [ngSwitch]=\\\"selectedView\\\" >\\r\\n          <div *ngSwitchCase=\\\"'proche'\\\">\\r\\n              <ion-card *ngFor=\\\"let hopital of hopitauxp\\\" (click)=\\\"DetailHopital(hopital)\\\" >\\r\\n                  <ion-card-header>\\r\\n                      <ion-card-title>\\r\\n                        {{hopital.nom}}\\r\\n                      </ion-card-title>\\r\\n                 </ion-card-header>\\r\\n\\r\\n                 <ion-card-content>\\r\\n                   <ion-item>\\r\\n                      {{hopital.adresse}}\\r\\n                   </ion-item>\\r\\n                 </ion-card-content>\\r\\n               </ion-card>\\r\\n            <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\r\\n              <ion-infinite-scroll-content\\r\\n                      loadingSpinner=\\\"bubbles\\\"\\r\\n                      loadingText=\\\"Chargement...\\\">\\r\\n              </ion-infinite-scroll-content>\\r\\n            </ion-infinite-scroll>\\r\\n          </div>\\r\\n          <div *ngSwitchCase=\\\"'Autres'\\\">\\r\\n              <ion-toolbar color=\\\"secondary\\\">\\r\\n                  <ion-grid>\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"9\\\" size-sm>\\r\\n                            <ion-searchbar animated=\\\"true\\\" [(ngModel)]=\\\"kw\\\"  showCancelButton placeholder=\\\"Ville\\\"></ion-searchbar>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"3\\\" size-sm>\\r\\n                            <ion-button shape=\\\"round\\\"  (click)=\\\"afficherHop(kw)\\\"><ion-icon name=\\\"search\\\"></ion-icon></ion-button>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </ion-toolbar>\\r\\n            <ion-card *ngFor=\\\"let hopital of hopitaux\\\" (click)=\\\"DetailHopital(hopital)\\\" >\\r\\n              <ion-card-header>\\r\\n                  <ion-card-title>\\r\\n                    {{hopital.nom}}\\r\\n                  </ion-card-title>\\r\\n             </ion-card-header>\\r\\n\\r\\n             <ion-card-content>\\r\\n               <ion-item>\\r\\n                  {{hopital.adresse}}\\r\\n               </ion-item>\\r\\n             </ion-card-content>\\r\\n           </ion-card>\\r\\n           <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\r\\n              <ion-infinite-scroll-content\\r\\n                      loadingSpinner=\\\"bubbles\\\"\\r\\n                      loadingText=\\\"Chargement...\\\">\\r\\n              </ion-infinite-scroll-content>\\r\\n            </ion-infinite-scroll>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"listHopitaux==1\\\">\\r\\n         <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" >Nom:</ion-label>\\r\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"hopital.nom\\\" ></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" >Téléphone:</ion-label>\\r\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"hopital.telephone\\\" ></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" >Email:</ion-label>\\r\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"hopital.mail\\\" ></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" >Adresse :</ion-label>\\r\\n            <ion-textarea [(ngModel)]=\\\"hopital.adresse\\\" ></ion-textarea>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" >Services organisés:</ion-label>\\r\\n            <ion-textarea [(ngModel)]=\\\"hopital.service\\\" ></ion-textarea>\\r\\n          </ion-item>\\r\\n\\r\\n               <ion-button expand=\\\"block\\\" fill=\\\"outline\\\"(click)=\\\"enregistrer(hopital)\\\">Enregistrer</ion-button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"networkStatus && networkStatus.connected == false\\\" >\\r\\n    <ion-card *ngFor=\\\"let hopital of hopitauxp\\\" (click)=\\\"DetailHopital(hopital)\\\" >\\r\\n        <ion-card-header>\\r\\n            <ion-card-title>\\r\\n              {{hopital.nom}}\\r\\n            </ion-card-title>\\r\\n       </ion-card-header>\\r\\n\\r\\n       <ion-card-content>\\r\\n         <ion-item>\\r\\n            {{hopital.adresse}}\\r\\n         </ion-item>\\r\\n       </ion-card-content>\\r\\n     </ion-card>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HopitalPage } from './hopital.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HopitalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HopitalPage]\n})\nexport class HopitalPageModule {}\n","module.exports = \".ion-activatable {\\n  position: relative;\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaG9waXRhbC9IOlxcRm9udEVuZEFwcFxcbG9iaWtveWFjb25nb0JpZW4xMFxcbWFrdWxvYmlrby9zcmNcXGFwcFxccGFnZXNcXGhvcGl0YWxcXGhvcGl0YWwucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9ob3BpdGFsL2hvcGl0YWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaG9waXRhbC9ob3BpdGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pb24tYWN0aXZhdGFibGUge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbiIsIi5pb24tYWN0aXZhdGFibGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59Il19 */\"","import { ToastController } from '@ionic/angular';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { HopitalModel } from '../../models/hopital.model';\nimport { Component, OnInit } from '@angular/core';\nimport {NavigationExtras, Router} from \"@angular/router\";\nimport { HopitalService } from '../../services/hopital.service';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\nimport {Plugins,NetworkStatus,PluginListenerHandle} from \"@capacitor/core\";\nconst {Network} = Plugins;\n\n@Component({\n  selector: 'app-hopital',\n  templateUrl: './hopital.page.html',\n  styleUrls: ['./hopital.page.scss'],\n})\nexport class HopitalPage implements OnInit {\n\n  public nom:string;\n  public listHopitaux: number = 0;\n  public buttonPlus: number = 0;\n  public title: string = 'Hôpitaux';\n  public hopital: HopitalModel;\n  public kw:string=\"\";\n  public hopitaux;\n  public hopitauxp;\n  public localite:string=\"\";\n  networkListener: PluginListenerHandle;\n  networkStatus:NetworkStatus;\n  constructor(private router:Router,private hopitalservice:HopitalService,public geolocation:Geolocation,\n  private toastctrl:ToastController,private geocoder:NativeGeocoder) {\n    this.hopital = {} as HopitalModel;\n   }\n\n  async ngOnInit() {\n\n    this.networkListener= Network.addListener('networkStatusChange',status =>{\n      console.log(\"network status change\",status);\n      this.networkStatus = status;\n     });\n\n     this.networkStatus = await Network.getStatus();\n     if(this.networkStatus.connected == false){\n      this.hopitauxp=[\n        {nom:'Hopital Saint Joseph',telephone:'+243854878767',mail:'hopitalsaintjosephkin@gmail.com',ville:'Kinshasa',adresse:'14 ème rue Limete residentiel',service:'Dispensaire,Diabetologie,Urgence,Réanimation,Soins intentifs,Pédiatrie,Néonatologie,Urgence pédiatrique,Chirurgie,Gynecologie obstrétrique,Fistula clinic,Ophtalmologie,Stomatologie(dentisterie),Imagerie médicale,Otorhinolaryngologie(ORL),Morgue,Pharmacie',localite:'Linmete'}\n\n      ]\n     }else if(this.networkStatus.connected == true){\n      this.afficherHopP();\n     }\n  }\n  afficherHopP(){\n    this.geolocation.getCurrentPosition().then((position) => {\n      let latitude= position.coords.latitude;\n      let longitude= position.coords.longitude;\n      var options:NativeGeocoderOptions={\n        useLocale:true,\n        maxResults:1\n      };\n      this.geocoder.reverseGeocode(latitude,longitude,options).\n     then((results)=>{\n        var localite = results[0].subLocality;\n        this.hopitalservice.getHopitalp(localite)\n      .subscribe(data=>{\n        this.hopitauxp = data;\n      },err=>{\n        console.log(err)\n      })\n     });\n     }).catch((error) => {\n       console.log('Erreur pour la localisation probleme internet', error);\n     });\n  }\n  afficherHop(kw){\n    this.hopitalservice.getHopital(kw)\n      .subscribe(data=>{\n        this.hopitaux = data;\n      },err=>{\n        console.log(err)\n      })\n  }\n  creerHopital() {\n    this.listHopitaux=1;\n    this.buttonPlus=1;\n    this.title='Création hôpital';\n  }\n  retour(){\n    this.listHopitaux=0;\n    this.buttonPlus=0;\n    this.title='Hôpitaux';\n  }\n  loadData(event) {\n    setTimeout(() => {\n        console.log('Done');\n        event.target.complete();\n\n        // App logic to determine if all data is loaded\n        // and disable the infinite scroll\n        if (this.hopitaux.length == 1000) {\n            event.target.disabled = true;\n        }\n    }, 500);\n}\nasync enregistrer(hopital:HopitalModel) {\n  console.log(hopital);\n    this.geolocation.getCurrentPosition().then((position) => {\n      hopital.latitude= position.coords.latitude;\n      hopital.longitude= position.coords.longitude;\n      var options:NativeGeocoderOptions={\n        useLocale:true,\n        maxResults:1\n      }\n       this.geocoder.reverseGeocode(hopital.latitude,hopital.longitude,options).\n       then((results)=>{\n          hopital.localite = results[0].subLocality;\n          hopital.ville = results[0].administrativeArea;\n          this.hopitalservice.enregistrerMed(hopital)\n      .subscribe(res=>{\n        this.hopital=res;\n        console.log(hopital);\n        this.retour();\n      hopital.nom =\"\";\n      hopital.telephone =\"\";\n      hopital.ville =\"\";\n      hopital.adresse =\"\";\n      hopital.mail =\"\";\n      hopital.service =\"\";\n      this.retour();\n      });\n       });\n     }).catch((error) => {\n       console.log('Erreur pour la localisation probleme internet', error);\n     });\n}\n\n  DetailHopital(hopital:HopitalModel) {\n    let navigationExtras: NavigationExtras = {\n        queryParams: {\n            special: JSON.stringify(hopital)\n        }\n    };\n     this.router.navigate(['detail-hopital'], navigationExtras);\n    }\n}\n","import { HopitalModel } from './../models/hopital.model';\nimport { Injectable } from '@angular/core';\nimport {map, take} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HopitalService {\n\n  public host:string=\"http://41.242.128.107:780\";\n  constructor(private httpclient:HttpClient) {\n\n   }\n   getHopital(kw:string):Observable<HopitalModel>{\n      return this.httpclient.get<HopitalModel>(this.host+\"/hopital?kw=\"+kw);\n   }\n   getHopitalp(kw:string):Observable<HopitalModel>{\n    return this.httpclient.get<HopitalModel>(this.host+\"/hopitalp?kw=\"+kw);\n }\nenregistrerMed(hopital:HopitalModel):Observable<HopitalModel>{\n    return this.httpclient.post<HopitalModel>(this.host+\"/hopital\",hopital);\n  }\n}\n"],"sourceRoot":""}