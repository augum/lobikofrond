{"version":3,"sources":["./src/app/pages/pharmacie/pharmacie.page.html","./src/app/pages/pharmacie/pharmacie.module.ts","./src/app/pages/pharmacie/pharmacie.page.scss","./src/app/pages/pharmacie/pharmacie.page.ts","./src/app/services/pharmacie.service.ts"],"names":[],"mappings":"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","file":"pages-pharmacie-pharmacie-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar [color]=\\\"networkStatus && networkStatus.connected ?'primary':'danger'\\\">\\n    <ion-back-button slot=\\\"start\\\"></ion-back-button>\\n    <ion-buttons slot=\\\"end\\\" >\\n      <ion-menu-button ><ion-icon name=\\\"more\\\"></ion-icon></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>{{title}}</ion-title>\\n  </ion-toolbar>\\n    <ion-toolbar color=\\\"primary\\\" *ngIf=\\\"networkStatus && networkStatus.connected == true\\\">\\n          <ion-button color=\\\"danger\\\" shape=\\\"round\\\" slot=\\\"start\\\" (click)=\\\"creerPharmacie()\\\" *ngIf=\\\"buttonPlus==0\\\">\\n            <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button color=\\\"danger\\\" shape=\\\"round\\\" slot=\\\"start\\\" (click)=\\\"retour()\\\" *ngIf=\\\"buttonPlus==1\\\">\\n               <ion-icon name=\\\"arrow-round-back\\\"></ion-icon>\\n          </ion-button>\\n      </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"networkStatus && networkStatus.connected == true\\\" >\\n    <div *ngIf=\\\"listPharmacie==0\\\">\\n      <ion-segment [(ngModel)]='selectedView'>\\n        <ion-segment-button value='proche' (click)=\\\"afficherPhar()\\\">\\n          <ion-label>Proche de moi</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value='Autres'>\\n            <ion-label>Autres</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n      <div [ngSwitch]=\\\"selectedView\\\" >\\n          <div *ngSwitchCase=\\\"'proche'\\\">\\n              <ion-card *ngFor=\\\"let pharmacie of pharmaciesP\\\">\\n                  <ion-card-header>\\n                      <ion-card-title>\\n                        {{pharmacie.nom}}\\n                      </ion-card-title>\\n                 </ion-card-header>\\n\\n                 <ion-card-content>\\n                   <ion-item>\\n                      {{pharmacie.adresse}}\\n                   </ion-item>\\n                   <ion-item>\\n                      Appeler\\n                        <div  slot=\\\"end\\\">\\n                            <ion-button color=\\\"success\\\" (click)=\\\"appelleR(pharmacie.telephone)\\\">\\n                                <ion-icon slot=\\\"end\\\" name=\\\"call\\\"></ion-icon>\\n                            </ion-button>\\n                        </div>\\n                    </ion-item>\\n                 </ion-card-content>\\n               </ion-card>\\n            <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n              <ion-infinite-scroll-content\\n                      loadingSpinner=\\\"bubbles\\\"\\n                      loadingText=\\\"Chargement...\\\">\\n              </ion-infinite-scroll-content>\\n            </ion-infinite-scroll>\\n          </div>\\n          <div *ngSwitchCase=\\\"'Autres'\\\">\\n              <ion-toolbar color=\\\"secondary\\\">\\n                  <ion-grid>\\n                      <ion-row>\\n                        <ion-col size=\\\"9\\\" size-sm>\\n                            <ion-searchbar animated=\\\"true\\\" [(ngModel)]=\\\"kw\\\"  showCancelButton placeholder=\\\"Ville\\\"></ion-searchbar>\\n                        </ion-col>\\n                        <ion-col size=\\\"3\\\" size-sm>\\n                            <ion-button shape=\\\"round\\\"  (click)=\\\"afficherPharmacieV(kw)\\\"><ion-icon name=\\\"search\\\"></ion-icon></ion-button>\\n                        </ion-col>\\n                      </ion-row>\\n                    </ion-grid>\\n                  </ion-toolbar>\\n            <ion-card *ngFor=\\\"let pharmacie of pharmacies\\\">\\n              <ion-card-header>\\n                  <ion-card-title>\\n                    {{pharmacie.nom}}\\n                  </ion-card-title>\\n             </ion-card-header>\\n\\n             <ion-card-content>\\n               <ion-item>\\n                  {{pharmacie.adresse}}\\n               </ion-item>\\n               <ion-item>\\n                  Appeler\\n                    <div  slot=\\\"end\\\">\\n                        <ion-button color=\\\"success\\\" (click)=\\\"appelleR(pharmacie.telephone)\\\">\\n                            <ion-icon slot=\\\"end\\\" name=\\\"call\\\"></ion-icon>\\n                        </ion-button>\\n                    </div>\\n                </ion-item>\\n             </ion-card-content>\\n           </ion-card>\\n           <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n              <ion-infinite-scroll-content\\n                      loadingSpinner=\\\"bubbles\\\"\\n                      loadingText=\\\"Chargement...\\\">\\n              </ion-infinite-scroll-content>\\n            </ion-infinite-scroll>\\n          </div>\\n      </div>\\n    </div>\\n  <div *ngIf=\\\"listPharmacie==1\\\">\\n\\n       <ion-item>\\n          <ion-label position=\\\"floating\\\" >Nom:</ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"pharmacie.nom\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" >Téléphone:</ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"pharmacie.telephone\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" >Adresse :</ion-label>\\n          <ion-textarea [(ngModel)]=\\\"pharmacie.adresse\\\" ></ion-textarea>\\n        </ion-item>\\n\\n        <ion-button expand=\\\"block\\\" fill=\\\"outline\\\"(click)=\\\"enregistrer(pharmacie)\\\">Enregistrer</ion-button>\\n  </div>\\n  </div>\\n  <div *ngIf=\\\"networkStatus && networkStatus.connected == false\\\" >\\n    <ion-card *ngFor=\\\"let pharmacie of pharmaciesP\\\">\\n        <ion-card-header>\\n            <ion-card-title>\\n              {{pharmacie.nom}}\\n            </ion-card-title>\\n       </ion-card-header>\\n\\n       <ion-card-content>\\n         <ion-item>\\n            {{pharmacie.adresse}}\\n         </ion-item>\\n         <ion-item>\\n            Appeler\\n              <div  slot=\\\"end\\\">\\n                  <ion-button color=\\\"success\\\" (click)=\\\"appelleR(pharmacie.telephone)\\\">\\n                      <ion-icon slot=\\\"end\\\" name=\\\"call\\\"></ion-icon>\\n                  </ion-button>\\n              </div>\\n          </ion-item>\\n       </ion-card-content>\\n     </ion-card>\\n  </div>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PharmaciePage } from './pharmacie.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PharmaciePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PharmaciePage]\n})\nexport class PharmaciePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BoYXJtYWNpZS9waGFybWFjaWUucGFnZS5zY3NzIn0= */\"","import { CallNumber } from '@ionic-native/call-number/ngx';\nimport { PharmacieService } from '../../services/pharmacie.service';\nimport { PharmacieModel } from '../../models/pharmacie.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\nimport {Plugins,NetworkStatus,PluginListenerHandle} from \"@capacitor/core\";\nconst {Network} = Plugins;\n@Component({\n  selector: 'app-pharmacie',\n  templateUrl: './pharmacie.page.html',\n  styleUrls: ['./pharmacie.page.scss'],\n})\nexport class PharmaciePage implements OnInit {\n  public resultat:string=\"\";\n  public pharmacies;\n  public pharmaciesP;\n  public kw:string=\"\";\n  public pharmacie:PharmacieModel;\n  public listPharmacie:number = 0;\n  public buttonPlus: number = 0;\n  public title: string = 'Pharmacies';\n  networkListener: PluginListenerHandle;\n  networkStatus:NetworkStatus;\n  constructor(public geolocation:Geolocation,private geocoder:NativeGeocoder,private pharmacieservice:PharmacieService,private callNumber: CallNumber) {\n    this.pharmacie = {} as PharmacieModel;\n  }\n\n  async ngOnInit() {\n    /*console.log(\"network status change\",status);\n    this.networkStatus = status;\n   });\n\n   this.networkStatus = await Network.getStatus();\n   if(this.networkStatus.connected == false){\n    this.pharmaciesP =[\n      {nom:'Mwana teba phar',telephone:'0817454012',adresse:'12 guimbeo',ville:'Katakokombe',localite:'Lingwala'},\n      {nom:'Mwana teba phar',telephone:'0817454012',adresse:'12 guimbeo',ville:'Katakokombe',localite:'Lingwala'}\n    ]\n   }else if(this.networkStatus.connected == true){\n    this.afficherPhar();\n  }*/\n  this.networkListener= Network.addListener('networkStatusChange',status =>{\n    console.log(\"network status change\",status);\n    this.networkStatus = status;\n   });\n\n   this.networkStatus = await Network.getStatus();\n   if(this.networkStatus.connected == false){\n     this.pharmaciesP =[\n       /*{nom:'',telephone:'0817454012',adresse:'12 guimbeo',ville:'Katakokombe',localite:'Lingwala'},\n       {nom:'Mwana teba phar',telephone:'0817454012',adresse:'12 guimbeo',ville:'Katakokombe',localite:'Lingwala'}*/\n     ]\n   }else if(this.networkStatus.connected == true){\n    this.afficherPhar();\n   }\n  }\n\n  afficherPhar(){\n    this.geolocation.getCurrentPosition().then((position) => {\n      let latitude= position.coords.latitude;\n      let longitude= position.coords.longitude;\n      var options:NativeGeocoderOptions={\n        useLocale:true,\n        maxResults:1\n      };\n      this.geocoder.reverseGeocode(latitude,longitude,options).\n     then((results)=>{\n        var localite = results[0].subLocality;\n        this.pharmacieservice.getpharmacie(localite)\n      .subscribe(data=>{\n        this.pharmaciesP = data;\n      },err=>{\n        console.log(err)\n      })\n     });\n     }).catch((error) => {\n       console.log('Erreur pour la localisation probleme internet', error);\n     });\n  }\n  afficherPharmacieV(kw){\n    this.pharmacieservice.getPharv(kw)\n      .subscribe(data=>{\n        this.pharmacies = data;\n      },err=>{\n        console.log(err)\n      })\n  }\n  appelleR(telephone: string) {\n    console.log(telephone);\n    this.callNumber.callNumber(telephone, true)\n        .then(res => console.log('Launched dialer!', res))\n        .catch(err => console.log('Error launching dialer', err));\n}\n  creerPharmacie() {\n    this.listPharmacie=1;\n    this.buttonPlus=1;\n    this.title='Création pharmacie';\n  }\n  retour(){\n    this.listPharmacie=0;\n    this.buttonPlus=0;\n    this.title='Pharmacies';\n  }\n  loadData(event) {\n    setTimeout(() => {\n        console.log('Done');\n        event.target.complete();\n\n        // App logic to determine if all data is loaded\n        // and disable the infinite scroll\n        if (this.pharmacies.length == 1000) {\n            event.target.disabled = true;\n        }\n    }, 500);\n}\n\nasync enregistrer(pharmacie:PharmacieModel) {\n  console.log(pharmacie);\n    this.geolocation.getCurrentPosition().then((position) => {\n      pharmacie.latitude= position.coords.latitude;\n      pharmacie.longitude= position.coords.longitude;\n      var options:NativeGeocoderOptions={\n        useLocale:true,\n        maxResults:1\n      }\n       this.geocoder.reverseGeocode(pharmacie.latitude,pharmacie.longitude,options).\n       then((results)=>{\n          pharmacie.localite = results[0].subLocality;\n          pharmacie.ville = results[0].administrativeArea;\n          this.pharmacieservice.enregistrerPhar(pharmacie)\n      .subscribe(res=>{\n      this.retour();\n      });\n       });\n     }).catch((error) => {\n       console.log('Erreur pour la localisation probleme internet', error);\n     });\n}\n\n}\n","import { Observable } from 'rxjs';\nimport { PharmacieModel } from './../models/pharmacie.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PharmacieService {\n\n public host:string=\"http://41.242.128.107:780\";\n  constructor(private httpclient:HttpClient) { }\n  //recupere la pharmacie proche\n  getpharmacie(kw:string):Observable<PharmacieModel>{\n    return this.httpclient.get<PharmacieModel>(this.host+\"/pharmacies?kw=\"+kw);\n }\n //recupere la pharmacie dans la ville\n getPharv(kw:string):Observable<PharmacieModel>{\n  return this.httpclient.get<PharmacieModel>(this.host+\"/pharmacieV?kw=\"+kw);\n}\n  enregistrerPhar(pharmacie:PharmacieModel):Observable<PharmacieModel>{\n    return this.httpclient.post<PharmacieModel>(this.host+\"/pharmacies\",pharmacie);\n  }\n}\n"],"sourceRoot":""}